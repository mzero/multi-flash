

== BAISC FEATURES ==


[] only seek files after a few seconds of flash updates stop
    [] and force a flush
    [] clear error/status on rescan

[] error if no boot
    - since that is currently required


[] Indicators
    [] what
        [] waiting
        [] percentage complete
        [] percentage verified
        [] done
    [] how
        [] OLED
        [] 10 RGB leds
        [] red LED
        [] speaker

[] reset line is funky?


== FUTURE ===

[] Eject button

[] formats flash as FAT (compatible with CircuitPython we hope)
	[] writes all the needed stuff to keep mac happy
	        f_mkdir(&vfs_fat->fatfs, "/.fseventsd");
	        make_empty_file(&vfs_fat->fatfs, "/.metadata_never_index");
	        make_empty_file(&vfs_fat->fatfs, "/.Trashes");
	        make_empty_file(&vfs_fat->fatfs, "/.fseventsd/no_log");
    [] volume name
[] format flash if button down on boot


[] connector ground for sensing connection (don't forget to pause)

[] Adafruilt_DAP
    [] use of perror_exit is flawed
        - sometimes used when first part of message is after Serial.print() calls
        - expects to exit app (or rather hang app) - so no good for app to continue
    [] enable programming w/o full chip erase
        - would need program block to use the erase row command (as sort of coded in comments)
    [] lock fuses
        - use temporary unlock commands?
        - set them based on size of things burned? just boot?
        - is boot always 8k?
            8k for M0
            16k for M4
    [] GCC 4.4 warning:
        Adafruit_DAP_library/Adafruit_DAP.h:295:40:
        note: offset of packed bit-field 'Adafruit_DAP_SAMx5::<unnamed union>::<unnamed struct>::BOD33_Level' has changed in GCC 4.4

[] handle boot binaries that are the "wrong" size for the platform
    - how to know what the right size is?
