

== A ==

[-] CPX Interface
    - Speaker Interface
        [-] beep on done
        - buzz on error
    [-] NeoPixels as progress bar
    [-] NeoPixels as error

[-] formats flash as FAT (compatible with CircuitPython we hope)
    [] writes all the needed stuff to keep mac happy
            f_mkdir(&vfs_fat->fatfs, "/.fseventsd");
            make_empty_file(&vfs_fat->fatfs, "/.metadata_never_index");
            make_empty_file(&vfs_fat->fatfs, "/.Trashes");
            make_empty_file(&vfs_fat->fatfs, "/.fseventsd/no_log");
    [x] volume name


== B ===


[] LED Interface
    - flutter while writing & verifying
    - on full when done
    - slow blink if error?



[] reset line is funky?
[] reset target after flashing?


== FUTURE ===

[] connector ground for sensing connection (don't forget to pause)

[] Adafruilt_DAP
    [] use of perror_exit is flawed
        - sometimes used when first part of message is after Serial.print() calls
        - expects to exit app (or rather hang app) - so no good for app to continue
    [] enable programming w/o full chip erase
        - would need program block to use the erase row command (as sort of coded in comments)
    [] lock fuses
        - use temporary unlock commands?
        - set them based on size of things burned? just boot?
        - is boot always 8k?
            8k for M0
            16k for M4
    [] GCC 4.4 warning:
        Adafruit_DAP_library/Adafruit_DAP.h:295:40:
        note: offset of packed bit-field 'Adafruit_DAP_SAMx5::<unnamed union>::<unnamed struct>::BOD33_Level' has changed in GCC 4.4

[] handle boot binaries that are the "wrong" size for the platform
    - how to know what the right size is?

[?] Eject button
    - doesn't seem possible in the API given

[] lock boot area after burn with fuses?


